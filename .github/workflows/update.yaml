name: CI and Self-Updating Repository

on:
  # Runs on push to main branch
  push:
    branches: [ "main" ]
  # Scheduled run: once every day at 00:00
  schedule:
    - cron: "0 0 * * *"

# Ensures only one instance of this workflow runs at a time (useful for frequent schedules)
concurrency:
  group: self-updating
  cancel-in-progress: true

jobs:
  # 1) Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: |
          # Example test command that outputs JSON (adjust as needed)
          npm test -- --json --outputFile=./test-results.json

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./test-results.json

  # 2) Self-Update Job
  update-readme:
    # This job depends on the build-and-test job (sequential)
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Download test results
        uses: actions/download-artifact@v3
        with:
          name: test-results
          path: .
      
      - name: Parse test results and update README
        run: |
          # Example using jq to parse JSON test results (assuming Jest style output).
          # Adjust parsing logic for your specific test output format.
          total_tests=$(cat test-results.json | jq '.numTotalTests')
          total_passed=$(cat test-results.json | jq '.numPassedTests')
          total_failed=$(cat test-results.json | jq '.numFailedTests')

          # Generate a summary string
          echo "## Automated Build & Test Results" > README.md
          echo "" >> README.md
          echo "**Date and Time (UTC):** $(date -u)" >> README.md
          echo "" >> README.md
          echo "**Total Tests:** $total_tests" >> README.md
          echo "**Passed:** $total_passed" >> README.md
          echo "**Failed:** $total_failed" >> README.md

          # Display file for debugging
          echo "New README.md content:"
          cat README.md

      - name: Configure git
        run: |
          git config --global user.name "ketkikinkar"
          git config --global user.email "ketki.kinkar2000@gmail.com"

      - name: Commit and Push changes
        run: |
          # Only commit if README.md has changes
          if [ -n "$(git status --porcelain)" ]; then
            git add README.md
            git commit -m "Automated update: $(date -u)"
            git push
          else
            echo "No changes to commit."
          fi
